// // This is your Prisma schema file,
// // learn more about it in the docs: https://pris.ly/d/prisma-schema

// // Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// // Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  polls Poll[]
  votes Vote[]
}

model Poll {
  id          String   @id @default(uuid())
  question    String
  isPublished Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  creator   User         @relation(fields: [creatorId], references: [id])
  creatorId String
  options   PollOption[]
}

model PollOption {
  id   String @id @default(uuid())
  text String

  poll   Poll   @relation(fields: [pollId], references: [id])
  pollId String
  votes  Vote[]
}

model Vote {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  user     User       @relation(fields: [userId], references: [id])
  userId   String
  option   PollOption @relation(fields: [optionId], references: [id])
  optionId String

  @@unique([userId, optionId])
}
